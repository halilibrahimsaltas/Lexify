version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${PORT}:${PORT}
    volumes:
      - .:/app
      - uploads:/app/uploads
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      postgres:
        condition: service_healthy
      libretranslate:
        condition: service_started
    networks:
      - backend-network
    restart: unless-stopped

  postgres:
    image: postgres:16
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  libretranslate:
    image: libretranslate/libretranslate:latest
    ports:
      - 5000:5000
    environment:
      - LT_LOAD_ONLY=en,tr
      - LT_DISABLE_WEB_UI=true
      - LT_DISABLE_FILES_TRANSLATION=true
      - LT_DISABLE_TELEMETRY=true
    networks:
      - backend-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  uploads:
    driver: local
  pgadmin:
    driver: local
